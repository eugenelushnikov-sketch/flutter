import { PrismaService } from '../prisma/prisma.service';
import { OrgType, Prisma } from '@prisma/client';
export declare class OrgsService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    create(data: Prisma.OrgCreateInput): Prisma.Prisma__OrgClient<{
        type: import("@prisma/client").$Enums.OrgType;
        email: string | null;
        name: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        slug: string;
        description: string | null;
        website: string | null;
        socialsJson: Prisma.JsonValue | null;
        logoId: string | null;
        coverId: string | null;
        phone: string | null;
        city: string | null;
        country: string | null;
        foundedYear: number | null;
        statsJson: Prisma.JsonValue | null;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, Prisma.PrismaClientOptions>;
    findBySlug(slug: string): Prisma.Prisma__OrgClient<({
        projects: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            description: string | null;
            city: string | null;
            address: string | null;
            lat: number | null;
            lng: number | null;
            status: import("@prisma/client").$Enums.ProjectStatus;
            deliveryAt: Date | null;
            heroId: string | null;
            featuresJson: Prisma.JsonValue | null;
            orgId: string;
        }[];
    } & {
        type: import("@prisma/client").$Enums.OrgType;
        email: string | null;
        name: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        slug: string;
        description: string | null;
        website: string | null;
        socialsJson: Prisma.JsonValue | null;
        logoId: string | null;
        coverId: string | null;
        phone: string | null;
        city: string | null;
        country: string | null;
        foundedYear: number | null;
        statsJson: Prisma.JsonValue | null;
    }) | null, null, import("@prisma/client/runtime/library").DefaultArgs, Prisma.PrismaClientOptions>;
    findMany(type?: OrgType): Prisma.PrismaPromise<{
        type: import("@prisma/client").$Enums.OrgType;
        email: string | null;
        name: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        slug: string;
        description: string | null;
        website: string | null;
        socialsJson: Prisma.JsonValue | null;
        logoId: string | null;
        coverId: string | null;
        phone: string | null;
        city: string | null;
        country: string | null;
        foundedYear: number | null;
        statsJson: Prisma.JsonValue | null;
    }[]>;
    update(id: string, data: Prisma.OrgUpdateInput, ownerUserId?: string): Prisma.Prisma__OrgClient<{
        type: import("@prisma/client").$Enums.OrgType;
        email: string | null;
        name: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        slug: string;
        description: string | null;
        website: string | null;
        socialsJson: Prisma.JsonValue | null;
        logoId: string | null;
        coverId: string | null;
        phone: string | null;
        city: string | null;
        country: string | null;
        foundedYear: number | null;
        statsJson: Prisma.JsonValue | null;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, Prisma.PrismaClientOptions>;
}
